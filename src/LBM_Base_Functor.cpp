#include "LBM_Base_Functor.h"

/*
 * Specialization for different lattice.
 *
 * speeds are adapted from SILABE3D,
 * file Lib-LBM2D_90.f and Lib-LBM3D_90.f
 *   subroutine Initialize_Speeds_Lattice_D2Q9_MPI
 *   subroutine Initialize_Speeds_Lattice_D3Q7_MPI
 *   etc...
 */

// clang-format off
// because clang-format cannot handle array of array initializer lists (which uses triple braces)

// ===========================================================
// D2Q5
// ===========================================================
template<>
const LBMBaseFunctor<2, NPOP_D2Q5>::LBM_Weights
  LBMBaseFunctor<2, NPOP_D2Q5>::w = {
    1.0 / 3.0,
    1.0 / 6.0,
    1.0 / 6.0,
    1.0 / 6.0,
    1.0 / 6.0,
};

template<>
const LBMBaseFunctor<2, NPOP_D2Q5>::LBM_speeds
  LBMBaseFunctor<2, NPOP_D2Q5>::E = {
    {
      { 0,  0},
      { 1,  0},
      { 0,  1},
      {-1,  0},
      { 0, -1},
}
};

template<>
const LBMBaseFunctor<2, NPOP_D2Q5>::LBM_speeds_opposite
  LBMBaseFunctor<2, NPOP_D2Q5>::Ebar = {
    0,
    3,
    4,
    1,
    2,
};

template<>
const LBMBaseFunctor<2, NPOP_D2Q5>::Matrix
  LBMBaseFunctor<2, NPOP_D2Q5>::M ={
    {
      {1.0,  1.0,  1.0,  1.0,  1.0},
      {0.0,  1.0,  0.0, -1.0,  0.0},
      {0.0,  0.0,  1.0,  0.0, -1.0},
      {4.0, -1.0, -1.0, -1.0, -1.0},
      {0.0,  1.0, -1.0,  1.0, -1.0},
}
};

template<>
const LBMBaseFunctor<2, NPOP_D2Q5>::Matrix
  LBMBaseFunctor<2, NPOP_D2Q5>::Minv ={
    {
      {1.0 / 5.0,        0.0,        0.0,   1.0 / 5.0,        0.0},
      {1.0 / 5.0,  1.0 / 2.0,        0.0, -1.0 / 20.0,  1.0 / 4.0},
      {1.0 / 5.0,        0.0,  1.0 / 2.0, -1.0 / 20.0, -1.0 / 4.0},
      {1.0 / 5.0, -1.0 / 2.0,        0.0, -1.0 / 20.0,  1.0 / 4.0},
      {1.0 / 5.0,        0.0, -1.0 / 2.0, -1.0 / 20.0, -1.0 / 4.0},
}
};

// ===========================================================
// D2Q9
// ===========================================================
template<>
const LBMBaseFunctor<2, NPOP_D2Q9>::LBM_Weights
  LBMBaseFunctor<2, NPOP_D2Q9>::w = {
    4.0 / 9.0,
    1.0 / 9.0,
    1.0 / 9.0,
    1.0 / 9.0,
    1.0 / 9.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
};

template<>
const LBMBaseFunctor<2, NPOP_D2Q9>::LBM_speeds
  LBMBaseFunctor<2, NPOP_D2Q9>::E ={
    {
      { 0,  0}, // 0
      { 1,  0}, // 1
      { 0,  1}, // 2
      {-1,  0}, // 3
      { 0, -1}, // 4
      { 1,  1}, // 5
      {-1,  1}, // 6
      {-1, -1}, // 7
      { 1, -1}, // 8
}
}
;

template<>
const LBMBaseFunctor<2, NPOP_D2Q9>::LBM_speeds_opposite
  LBMBaseFunctor<2, NPOP_D2Q9>::Ebar = {
    0, // 0
    3, // 1
    4, // 2
    1, // 3
    2, // 4
    7, // 5
    8, // 6
    5, // 7
    6, // 8
};

template<>
const LBMBaseFunctor<2, NPOP_D2Q9>::Matrix
  LBMBaseFunctor<2, NPOP_D2Q9>::M ={
    {
      {1.0,  1.0,  1.0,  1.0,  1.0, 1.0,  1.0,  1.0,  1.0},

      { -4, -1.0, -1.0, -1.0, -1.0, 2.0,  2.0,  2.0,  2.0},
      {4.0, -2.0, -2.0, -2.0, -2.0, 1.0,  1.0,  1.0,  1.0},
      {0.0,  1.0,  0.0, -1.0,  0.0, 1.0, -1.0, -1.0,  1.0},
      {0.0, -2.0,  0.0,  2.0,  0.0, 1.0, -1.0, -1.0,  1.0},
      {0.0,  0.0,  1.0,  0.0, -1.0, 1.0,  1.0, -1.0, -1.0},
      {0.0,  0.0, -2.0,  0.0,  2.0, 1.0,  1.0, -1.0, -1.0},
      {0.0,  1.0, -1.0,  1.0, -1.0, 0.0,  0.0,  0.0,  0.0},
      {0.0,  0.0,  0.0,  0.0,  0.0, 1.0, -1.0,  1.0, -1.0},
}
}
;

template<>
const LBMBaseFunctor<2, NPOP_D2Q9>::Matrix
  LBMBaseFunctor<2, NPOP_D2Q9>::Minv ={
    {
      {1.0 / 9.0,  -1.0 / 9.0,   1.0 / 9.0,          0,           0,          0,           0,          0,          0},
      {1.0 / 9.0, -1.0 / 36.0, -1.0 / 18.0,  1.0 / 6.0,  -1.0 / 6.0,          0,           0,  1.0 / 4.0,          0},
      {1.0 / 9.0, -1.0 / 36.0, -1.0 / 18.0,          0,           0,  1.0 / 6.0,  -1.0 / 6.0, -1.0 / 4.0,          0},
      {1.0 / 9.0, -1.0 / 36.0, -1.0 / 18.0, -1.0 / 6.0,   1.0 / 6.0,          0,           0,  1.0 / 4.0,          0},
      {1.0 / 9.0, -1.0 / 36.0, -1.0 / 18.0,          0,           0, -1.0 / 6.0,   1.0 / 6.0, -1.0 / 4.0,          0},
      {1.0 / 9.0,  1.0 / 18.0,  1.0 / 36.0,  1.0 / 6.0,  1.0 / 12.0,  1.0 / 6.0,  1.0 / 12.0,          0,  1.0 / 4.0},
      {1.0 / 9.0,  1.0 / 18.0,  1.0 / 36.0, -1.0 / 6.0, -1.0 / 12.0,  1.0 / 6.0,  1.0 / 12.0,          0, -1.0 / 4.0},
      {1.0 / 9.0,  1.0 / 18.0,  1.0 / 36.0, -1.0 / 6.0, -1.0 / 12.0, -1.0 / 6.0, -1.0 / 12.0,          0,  1.0 / 4.0},
      {1.0 / 9.0,  1.0 / 18.0,  1.0 / 36.0,  1.0 / 6.0,  1.0 / 12.0, -1.0 / 6.0, -1.0 / 12.0,          0, -1.0 / 4.0},
}
}
;

// ===========================================================
// D3Q7
// ===========================================================
template<>
const LBMBaseFunctor<3, NPOP_D3Q7>::LBM_Weights
  LBMBaseFunctor<3, NPOP_D3Q7>::w = {
    1.0 / 4.0,
    1.0 / 8.0,
    1.0 / 8.0,
    1.0 / 8.0,
    1.0 / 8.0,
    1.0 / 8.0,
    1.0 / 8.0,
};

template<>
const LBMBaseFunctor<3, NPOP_D3Q7>::LBM_speeds
  LBMBaseFunctor<3, NPOP_D3Q7>::E ={
    {
      { 0,  0,  0},
      { 1,  0,  0},
      { 0,  1,  0},
      {-1,  0,  0},
      { 0, -1,  0},
      { 0,  0,  1},
      { 0,  0, -1},
}
}
;

template<>
const LBMBaseFunctor<3, NPOP_D3Q7>::LBM_speeds_opposite
  LBMBaseFunctor<3, NPOP_D3Q7>::Ebar = {
    0,
    3,
    4,
    1,
    2,
    6,
    5,
};

template<>
const LBMBaseFunctor<3, NPOP_D3Q7>::Matrix
  LBMBaseFunctor<3, NPOP_D3Q7>::M ={
    {
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
}
}
;

template<>
const LBMBaseFunctor<3, NPOP_D3Q7>::Matrix
  LBMBaseFunctor<3, NPOP_D3Q7>::Minv ={
    {
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
}
}
;

// ===========================================================
// D3Q15
// ===========================================================
template<>
const LBMBaseFunctor<3, NPOP_D3Q15>::LBM_Weights
  LBMBaseFunctor<3, NPOP_D3Q15>::w = {
    2.0 / 9.0,
    1.0 / 9.0,
    1.0 / 9.0,
    1.0 / 9.0,
    1.0 / 9.0,
    1.0 / 9.0,
    1.0 / 9.0,
    1.0 / 72.0,
    1.0 / 72.0,
    1.0 / 72.0,
    1.0 / 72.0,
    1.0 / 72.0,
    1.0 / 72.0,
    1.0 / 72.0,
    1.0 / 72.0,
};

template<>
const LBMBaseFunctor<3, NPOP_D3Q15>::LBM_speeds
  LBMBaseFunctor<3, NPOP_D3Q15>::E ={
    {
      { 0,  0,  0}, // 0
      { 1,  0,  0}, // 1
      { 0,  1,  0}, // 2
      {-1,  0,  0}, // 3
      { 0, -1,  0}, // 4
      { 0,  0,  1}, // 5
      { 0,  0, -1}, // 6
      { 1,  1,  1}, // 7
      {-1,  1,  1}, // 8
      {-1, -1,  1}, // 9
      { 1, -1,  1}, // 10
      { 1,  1, -1}, // 11
      {-1,  1, -1}, // 12
      {-1, -1, -1}, // 13
      { 1, -1, -1}, // 14
}
}
;

template<>
const LBMBaseFunctor<3, NPOP_D3Q15>::LBM_speeds_opposite
  LBMBaseFunctor<3, NPOP_D3Q15>::Ebar = {
    0,  // 0
    3,  // 1
    4,  // 2
    1,  // 3
    2,  // 4
    6,  // 5
    5,  // 6
    13, // 7
    14, // 8
    11, // 9
    12, // 10
    9,  // 11
    10, // 12
    7,  // 13
    8,  // 14
};

template<>
const LBMBaseFunctor<3, NPOP_D3Q15>::Matrix
  LBMBaseFunctor<3, NPOP_D3Q15>::M ={
    {
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
}
}
;

template<>
const LBMBaseFunctor<3, NPOP_D3Q15>::Matrix
  LBMBaseFunctor<3, NPOP_D3Q15>::Minv ={
    {
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
      {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
}
}
;

// ===========================================================
// D3Q19
// ===========================================================
template<>
const LBMBaseFunctor<3, NPOP_D3Q19>::LBM_Weights
  LBMBaseFunctor<3, NPOP_D3Q19>::w = {
    1.0 / 3.0,
    1.0 / 18.0,
    1.0 / 18.0,
    1.0 / 18.0,
    1.0 / 18.0,
    1.0 / 18.0,
    1.0 / 18.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
};

template<>
const LBMBaseFunctor<3, NPOP_D3Q19>::LBM_speeds
  LBMBaseFunctor<3, NPOP_D3Q19>::E ={
    {
      { 0,  0,  0},
      { 1,  0,  0},
      { 0,  1,  0},
      {-1,  0,  0},
      { 0, -1,  0},
      { 0,  0,  1},
      { 0,  0, -1},

      { 1,  1,  0},
      {-1,  1,  0},
      {-1, -1,  0},
      { 1, -1,  0},

      { 1,  0,  1},
      {-1,  0,  1},
      {-1,  0, -1},
      { 1,  0, -1},

      { 0,  1,  1},
      { 0, -1,  1},
      { 0, -1, -1},
      { 0,  1, -1},
}
}
;

template<>
const LBMBaseFunctor<3, NPOP_D3Q19>::LBM_speeds_opposite
  LBMBaseFunctor<3, NPOP_D3Q19>::Ebar = {
    0,
    3,
    4,
    1,
    2,
    6,
    5,
    9,
    10,
    7,
    8,
    13,
    14,
    11,
    12,
    17,
    18,
    15,
    16,
};

template<>
const LBMBaseFunctor<3, NPOP_D3Q19>::Matrix
  LBMBaseFunctor<3, NPOP_D3Q19>::M = {
    {
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     }
};

template<>
const LBMBaseFunctor<3, NPOP_D3Q19>::Matrix
  LBMBaseFunctor<3, NPOP_D3Q19>::Minv = {
    {
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
     }
};

// ===========================================================
// D3Q27
// ===========================================================
template<>
const LBMBaseFunctor<3, NPOP_D3Q27>::LBM_Weights
  LBMBaseFunctor<3, NPOP_D3Q27>::w = {
    8.0 / 27.0,

    2.0 / 27.0,
    2.0 / 27.0,
    2.0 / 27.0,
    2.0 / 27.0,
    2.0 / 27.0,
    2.0 / 27.0,

    1.0 / 216.0,
    1.0 / 216.0,
    1.0 / 216.0,
    1.0 / 216.0,
    1.0 / 216.0,
    1.0 / 216.0,
    1.0 / 216.0,
    1.0 / 216.0,

    1.0 / 54.0,
    1.0 / 54.0,
    1.0 / 54.0,
    1.0 / 54.0,
    1.0 / 54.0,
    1.0 / 54.0,
    1.0 / 54.0,
    1.0 / 54.0,
    1.0 / 54.0,
    1.0 / 54.0,
    1.0 / 54.0,
    1.0 / 54.0,

};

// Alain
// Conventions reprises de Mitchell et al., Int Journ of Multiphase
// Flows 107 (2018) 1–15 page 13
template<>
const LBMBaseFunctor<3, NPOP_D3Q27>::LBM_speeds
  LBMBaseFunctor<3, NPOP_D3Q27>::E ={
    {

      { 0,  0,  0}, // 0
      { 1,  0,  0}, // 1        opposite 2
      {-1,  0,  0}, // 2        op 1
      { 0,  1,  0}, // 3        op 4
      { 0, -1,  0}, // 4        op 3
      { 0,  0,  1}, // 5        op 6
      { 0,  0, -1}, // 6        op 5

      { 1,  1,  1}, // 7      opposite 14
      {-1,  1,  1}, // 8      opposite 13
      { 1, -1,  1}, // 9      opposite 12
      {-1, -1,  1}, // 10 opposite 11
      { 1,  1, -1}, // 11 op 10
      {-1,  1, -1}, // 12 op 9
      { 1, -1, -1}, // 13 op 8
      {-1, -1, -1}, // 14 op 7

      { 1,  1,  0}, // 15  op 18
      {-1,  1,  0}, // 16  op 17
      { 1, -1,  0}, // 17  op 16
      {-1, -1,  0}, // 18  op 15

      { 1,  0,  1}, // 19  op 22
      {-1,  0,  1}, // 20  op 21
      { 1,  0, -1}, // 21  op 20
      {-1,  0, -1}, // 22  op 19

      { 0,  1,  1}, // 23  op 26
      { 0, -1,  1}, // 24  op 25
      { 0,  1, -1}, // 25  op 24
      { 0, -1, -1}, // 26  op 23
}
}
;
// MISE A JOUR ALAIN DES DIRECTIONS OPPOSEES AVEC LES NOUVELLES CONVENTIONS
template<>
const LBMBaseFunctor<3, NPOP_D3Q27>::LBM_speeds_opposite
  LBMBaseFunctor<3, NPOP_D3Q27>::Ebar = {
    0,

    2,
    1,
    4,
    3,
    6,
    5,

    14,
    13,
    12,
    11,

    10,
    9,
    8,
    7,

    18,
    17,
    16,
    15,

    22,
    21,
    20,
    19,

    26,
    25,
    24,
    23,

};

template<>
const LBMBaseFunctor<3, NPOP_D3Q27>::Matrix
  LBMBaseFunctor<3, NPOP_D3Q27>::M = {
    {
      { 1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0},
      { 0.0,  1.0, -1.0,  0.0,  0.0,  0.0,  0.0,  1.0, -1.0,  1.0, -1.0,  1.0, -1.0,  1.0, -1.0,  1.0, -1.0,  1.0, -1.0,  1.0, -1.0,  1.0, -1.0,  0.0,  0.0,  0.0,  0.0},
      { 0.0,  0.0,  0.0,  1.0, -1.0,  0.0,  0.0,  1.0,  1.0, -1.0, -1.0,  1.0,  1.0, -1.0, -1.0,  1.0,  1.0, -1.0, -1.0,  0.0,  0.0,  0.0,  0.0,  1.0, -1.0,  1.0, -1.0},
      { 0.0,  0.0,  0.0,  0.0,  0.0,  1.0, -1.0,  1.0,  1.0,  1.0,  1.0, -1.0, -1.0, -1.0, -1.0,  0.0,  0.0,  0.0,  0.0,  1.0,  1.0, -1.0, -1.0,  1.0,  1.0, -1.0, -1.0},
      { 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  1.0, -1.0, -1.0,  1.0,  1.0, -1.0, -1.0,  1.0,  1.0, -1.0, -1.0,  1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0},
      { 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  1.0,  1.0, -1.0, -1.0, -1.0, -1.0,  1.0,  1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  1.0, -1.0, -1.0,  1.0},
      { 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  1.0, -1.0,  1.0, -1.0, -1.0,  1.0, -1.0,  1.0,  0.0,  0.0,  0.0,  0.0,  1.0, -1.0, -1.0,  1.0,  0.0,  0.0,  0.0,  0.0},
      { 0.0,  2.0,  2.0, -1.0, -1.0, -1.0, -1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0, -2.0, -2.0, -2.0, -2.0},
      { 0.0,  0.0,  0.0,  1.0,  1.0, -1.0, -1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  1.0,  1.0,  1.0,  1.0, -1.0, -1.0, -1.0, -1.0,  0.0,  0.0,  0.0,  0.0},
      {-1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  2.0,  2.0,  2.0,  2.0,  2.0,  2.0,  2.0,  2.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0},
      { 0.0, -2.0,  2.0,  0.0,  0.0,  0.0,  0.0,  4.0, -4.0,  4.0, -4.0,  4.0, -4.0,  4.0, -4.0,  1.0, -1.0,  1.0, -1.0,  1.0, -1.0,  1.0, -1.0,  0.0,  0.0,  0.0,  0.0},
      { 0.0,  0.0,  0.0, -2.0,  2.0,  0.0,  0.0,  4.0,  4.0, -4.0, -4.0,  4.0,  4.0, -4.0, -4.0,  1.0,  1.0, -1.0, -1.0,  0.0,  0.0,  0.0,  0.0,  1.0, -1.0,  1.0, -1.0},
      { 0.0,  0.0,  0.0,  0.0,  0.0, -2.0,  2.0,  4.0,  4.0,  4.0,  4.0, -4.0, -4.0, -4.0, -4.0,  0.0,  0.0,  0.0,  0.0,  1.0,  1.0, -1.0, -1.0,  1.0,  1.0, -1.0, -1.0},
      { 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  1.0, -1.0,  1.0, -1.0, -1.0,  1.0, -1.0,  1.0,  0.0,  0.0,  0.0,  0.0},
      { 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -1.0, -1.0,  1.0,  1.0,  0.0,  0.0,  0.0,  0.0,  1.0, -1.0,  1.0, -1.0},
      { 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  1.0,  1.0, -1.0, -1.0, -1.0, -1.0,  1.0,  1.0},
      { 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  1.0, -1.0, -1.0,  1.0, -1.0,  1.0,  1.0, -1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0},
      { 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,  4.0,  4.0,  4.0,  4.0,  4.0,  4.0,  4.0,  4.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0},
      { 0.0, -2.0, -2.0,  1.0,  1.0,  1.0,  1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  2.0,  2.0,  2.0,  2.0,  2.0,  2.0,  2.0,  2.0, -4.0, -4.0, -4.0, -4.0},
      { 0.0,  0.0,  0.0, -1.0, -1.0,  1.0,  1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  2.0,  2.0,  2.0,  2.0, -2.0, -2.0, -2.0, -2.0,  0.0,  0.0,  0.0,  0.0},
      { 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  2.0, -2.0, -2.0,  2.0,  2.0, -2.0, -2.0,  2.0, -1.0,  1.0,  1.0, -1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0},
      { 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  2.0,  2.0, -2.0, -2.0, -2.0, -2.0,  2.0,  2.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -1.0,  1.0,  1.0, -1.0},
      { 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  2.0, -2.0,  2.0, -2.0, -2.0,  2.0, -2.0,  2.0,  0.0,  0.0,  0.0,  0.0, -1.0,  1.0,  1.0, -1.0,  0.0,  0.0,  0.0,  0.0},
      { 0.0,  1.0, -1.0,  0.0,  0.0,  0.0,  0.0,  4.0, -4.0,  4.0, -4.0,  4.0, -4.0,  4.0, -4.0, -2.0,  2.0, -2.0,  2.0, -2.0,  2.0, -2.0,  2.0,  0.0,  0.0,  0.0,  0.0},
      { 0.0,  0.0,  0.0,  1.0, -1.0,  0.0,  0.0,  4.0,  4.0, -4.0, -4.0,  4.0,  4.0, -4.0, -4.0, -2.0, -2.0,  2.0,  2.0,  0.0,  0.0,  0.0,  0.0, -2.0,  2.0, -2.0,  2.0},
      { 0.0,  0.0,  0.0,  0.0,  0.0,  1.0, -1.0,  4.0,  4.0,  4.0,  4.0, -4.0, -4.0, -4.0, -4.0,  0.0,  0.0,  0.0,  0.0, -2.0, -2.0,  2.0,  2.0, -2.0, -2.0,  2.0,  2.0},
      {-1.0,  2.0,  2.0,  2.0,  2.0,  2.0,  2.0, -8.0,  8.0,  8.0,  8.0,  8.0,  8.0,  8.0,  8.0, -4.0, -4.0, -4.0, -4.0, -4.0, -4.0, -4.0, -4.0, -4.0, -4.0, -4.0, -4.0},
},
}
;

template<>
const LBMBaseFunctor<3, NPOP_D3Q27>::Matrix
  LBMBaseFunctor<3, NPOP_D3Q27>::Minv = {
    {
      { 22.0 / 75.0,   -2.0 / 225.0,   -2.0 / 225.0,   -2.0 / 225.0,   -2.0 / 75.0,   -2.0 / 75.0,   -2.0 / 75.0,         0.0,         0.0, -34.0 / 75.0,   -2.0 / 225.0,   -2.0 / 225.0,   -2.0 / 225.0,        0.0,        0.0,        0.0,   -2.0 / 25.0,   16.0 / 75.0,         0.0,         0.0,   -2.0 / 75.0,   -2.0 / 75.0,   -2.0 / 75.0,   -2.0 / 225.0,   -2.0 / 225.0,   -2.0 / 225.0,  -1.0 / 25.0},
      {17.0 / 225.0,    17.0 / 75.0,    1.0 / 225.0,    1.0 / 225.0,    1.0 / 75.0,    1.0 / 75.0,    1.0 / 75.0,   1.0 / 9.0,         0.0,  1.0 / 225.0,    -8.0 / 75.0,    1.0 / 225.0,    1.0 / 225.0,        0.0,        0.0,        0.0,    1.0 / 25.0, -23.0 / 450.0, -1.0 / 18.0,         0.0,    1.0 / 75.0,    1.0 / 75.0,    1.0 / 75.0,     3.0 / 50.0,    1.0 / 225.0,    1.0 / 225.0,   1.0 / 50.0},
      {17.0 / 225.0,  -49.0 / 225.0,    1.0 / 225.0,    1.0 / 225.0,    1.0 / 75.0,    1.0 / 75.0,    1.0 / 75.0,   1.0 / 9.0,         0.0,  1.0 / 225.0,   26.0 / 225.0,    1.0 / 225.0,    1.0 / 225.0,        0.0,        0.0,        0.0,    1.0 / 25.0, -23.0 / 450.0, -1.0 / 18.0,         0.0,    1.0 / 75.0,    1.0 / 75.0,    1.0 / 75.0,  -23.0 / 450.0,    1.0 / 225.0,    1.0 / 225.0,   1.0 / 50.0},
      {17.0 / 225.0,    1.0 / 225.0,    17.0 / 75.0,    1.0 / 225.0,    1.0 / 75.0,    1.0 / 75.0,    1.0 / 75.0, -1.0 / 18.0,   1.0 / 6.0,  1.0 / 225.0,    1.0 / 225.0,    -8.0 / 75.0,    1.0 / 225.0,        0.0,        0.0,        0.0,    1.0 / 25.0, -23.0 / 450.0,  1.0 / 36.0, -1.0 / 12.0,    1.0 / 75.0,    1.0 / 75.0,    1.0 / 75.0,    1.0 / 225.0,     3.0 / 50.0,    1.0 / 225.0,   1.0 / 50.0},
      {17.0 / 225.0,    1.0 / 225.0,  -49.0 / 225.0,    1.0 / 225.0,    1.0 / 75.0,    1.0 / 75.0,    1.0 / 75.0, -1.0 / 18.0,   1.0 / 6.0,  1.0 / 225.0,    1.0 / 225.0,   26.0 / 225.0,    1.0 / 225.0,        0.0,        0.0,        0.0,    1.0 / 25.0, -23.0 / 450.0,  1.0 / 36.0, -1.0 / 12.0,    1.0 / 75.0,    1.0 / 75.0,    1.0 / 75.0,    1.0 / 225.0,  -23.0 / 450.0,    1.0 / 225.0,   1.0 / 50.0},
      {17.0 / 225.0,    1.0 / 225.0,    1.0 / 225.0,    17.0 / 75.0,    1.0 / 75.0,    1.0 / 75.0,    1.0 / 75.0, -1.0 / 18.0,  -1.0 / 6.0,  1.0 / 225.0,    1.0 / 225.0,    1.0 / 225.0,    -8.0 / 75.0,        0.0,        0.0,        0.0,    1.0 / 25.0, -23.0 / 450.0,  1.0 / 36.0,  1.0 / 12.0,    1.0 / 75.0,    1.0 / 75.0,    1.0 / 75.0,    1.0 / 225.0,    1.0 / 225.0,     3.0 / 50.0,   1.0 / 50.0},
      {17.0 / 225.0,    1.0 / 225.0,    1.0 / 225.0,  -49.0 / 225.0,    1.0 / 75.0,    1.0 / 75.0,    1.0 / 75.0, -1.0 / 18.0,  -1.0 / 6.0,  1.0 / 225.0,    1.0 / 225.0,    1.0 / 225.0,   26.0 / 225.0,        0.0,        0.0,        0.0,    1.0 / 25.0, -23.0 / 450.0,  1.0 / 36.0,  1.0 / 12.0,    1.0 / 75.0,    1.0 / 75.0,    1.0 / 75.0,    1.0 / 225.0,    1.0 / 225.0,  -23.0 / 450.0,   1.0 / 50.0},
      { 1.0 / 200.0,    3.0 / 200.0,    3.0 / 200.0,    3.0 / 200.0,   9.0 / 200.0,   9.0 / 200.0,   9.0 / 200.0,         0.0,         0.0,  3.0 / 200.0,    3.0 / 200.0,    3.0 / 200.0,    3.0 / 200.0,        0.0,        0.0,        0.0,  27.0 / 200.0,   3.0 / 200.0,         0.0,         0.0,   9.0 / 200.0,   9.0 / 200.0,   9.0 / 200.0,    3.0 / 200.0,    3.0 / 200.0,    3.0 / 200.0,  1.0 / 200.0},
      { 1.0 / 200.0, -23.0 / 1800.0,    3.0 / 200.0,    3.0 / 200.0, -23.0 / 600.0,   9.0 / 200.0, -23.0 / 600.0,         0.0,         0.0,  3.0 / 200.0, -23.0 / 1800.0,    3.0 / 200.0,    3.0 / 200.0,        0.0,        0.0,        0.0, -23.0 / 200.0,   3.0 / 200.0,         0.0,         0.0, -23.0 / 600.0,   9.0 / 200.0, -23.0 / 600.0, -23.0 / 1800.0,    3.0 / 200.0,    3.0 / 200.0,  1.0 / 200.0},
      { 1.0 / 200.0,    3.0 / 200.0, -23.0 / 1800.0,    3.0 / 200.0, -23.0 / 600.0, -23.0 / 600.0,   9.0 / 200.0,         0.0,         0.0,  3.0 / 200.0,    3.0 / 200.0, -23.0 / 1800.0,    3.0 / 200.0,        0.0,        0.0,        0.0, -23.0 / 200.0,   3.0 / 200.0,         0.0,         0.0, -23.0 / 600.0, -23.0 / 600.0,   9.0 / 200.0,    3.0 / 200.0, -23.0 / 1800.0,    3.0 / 200.0,  1.0 / 200.0},
      { 1.0 / 200.0, -23.0 / 1800.0, -23.0 / 1800.0,    3.0 / 200.0,   9.0 / 200.0, -23.0 / 600.0, -23.0 / 600.0,         0.0,         0.0,  3.0 / 200.0, -23.0 / 1800.0, -23.0 / 1800.0,    3.0 / 200.0,        0.0,        0.0,        0.0,  27.0 / 200.0,   3.0 / 200.0,         0.0,         0.0,   9.0 / 200.0, -23.0 / 600.0, -23.0 / 600.0, -23.0 / 1800.0, -23.0 / 1800.0,    3.0 / 200.0,  1.0 / 200.0},
      { 1.0 / 200.0,    3.0 / 200.0,    3.0 / 200.0, -23.0 / 1800.0,   9.0 / 200.0, -23.0 / 600.0, -23.0 / 600.0,         0.0,         0.0,  3.0 / 200.0,    3.0 / 200.0,    3.0 / 200.0, -23.0 / 1800.0,        0.0,        0.0,        0.0, -23.0 / 200.0,   3.0 / 200.0,         0.0,         0.0,   9.0 / 200.0, -23.0 / 600.0, -23.0 / 600.0,    3.0 / 200.0,    3.0 / 200.0, -23.0 / 1800.0,  1.0 / 200.0},
      { 1.0 / 200.0, -23.0 / 1800.0,    3.0 / 200.0, -23.0 / 1800.0, -23.0 / 600.0, -23.0 / 600.0,   9.0 / 200.0,         0.0,         0.0,  3.0 / 200.0, -23.0 / 1800.0,    3.0 / 200.0, -23.0 / 1800.0,        0.0,        0.0,        0.0,  27.0 / 200.0,   3.0 / 200.0,         0.0,         0.0, -23.0 / 600.0, -23.0 / 600.0,   9.0 / 200.0, -23.0 / 1800.0,    3.0 / 200.0, -23.0 / 1800.0,  1.0 / 200.0},
      { 1.0 / 200.0,    3.0 / 200.0, -23.0 / 1800.0, -23.0 / 1800.0, -23.0 / 600.0,   9.0 / 200.0, -23.0 / 600.0,         0.0,         0.0,  3.0 / 200.0,    3.0 / 200.0, -23.0 / 1800.0, -23.0 / 1800.0,        0.0,        0.0,        0.0,  27.0 / 200.0,   3.0 / 200.0,         0.0,         0.0, -23.0 / 600.0,   9.0 / 200.0, -23.0 / 600.0,    3.0 / 200.0, -23.0 / 1800.0, -23.0 / 1800.0,  1.0 / 200.0},
      { 1.0 / 200.0, -23.0 / 1800.0, -23.0 / 1800.0, -23.0 / 1800.0,   9.0 / 200.0,   9.0 / 200.0,   9.0 / 200.0,         0.0,         0.0,  3.0 / 200.0, -23.0 / 1800.0, -23.0 / 1800.0, -23.0 / 1800.0,        0.0,        0.0,        0.0, -23.0 / 200.0,   3.0 / 200.0,         0.0,         0.0,   9.0 / 200.0,   9.0 / 200.0,   9.0 / 200.0, -23.0 / 1800.0, -23.0 / 1800.0, -23.0 / 1800.0,  1.0 / 200.0},
      { 4.0 / 225.0,     4.0 / 75.0,     4.0 / 75.0,   -1.0 / 450.0,    4.0 / 25.0,  -1.0 / 150.0,  -1.0 / 150.0,  1.0 / 72.0,  1.0 / 24.0, 23.0 / 900.0,    7.0 / 600.0,    7.0 / 600.0,   -1.0 / 450.0,  1.0 / 8.0, -1.0 / 8.0,        0.0,   -1.0 / 50.0,  -1.0 / 450.0,  1.0 / 72.0,  1.0 / 24.0,  -9.0 / 100.0,  -1.0 / 150.0,  -1.0 / 150.0,   -3.0 / 100.0,   -3.0 / 100.0,   -1.0 / 450.0, -1.0 / 100.0},
      { 4.0 / 225.0,  -13.0 / 225.0,     4.0 / 75.0,   -1.0 / 450.0,  -13.0 / 75.0,  -1.0 / 150.0,  -1.0 / 150.0,  1.0 / 72.0,  1.0 / 24.0, 23.0 / 900.0, -29.0 / 1800.0,    7.0 / 600.0,   -1.0 / 450.0, -1.0 / 8.0, -1.0 / 8.0,        0.0,   -1.0 / 50.0,  -1.0 / 450.0,  1.0 / 72.0,  1.0 / 24.0,  23.0 / 300.0,  -1.0 / 150.0,  -1.0 / 150.0,   23.0 / 900.0,   -3.0 / 100.0,   -1.0 / 450.0, -1.0 / 100.0},
      { 4.0 / 225.0,     4.0 / 75.0,  -13.0 / 225.0,   -1.0 / 450.0,  -13.0 / 75.0,  -1.0 / 150.0,  -1.0 / 150.0,  1.0 / 72.0,  1.0 / 24.0, 23.0 / 900.0,    7.0 / 600.0, -29.0 / 1800.0,   -1.0 / 450.0,  1.0 / 8.0,  1.0 / 8.0,        0.0,   -1.0 / 50.0,  -1.0 / 450.0,  1.0 / 72.0,  1.0 / 24.0,  23.0 / 300.0,  -1.0 / 150.0,  -1.0 / 150.0,   -3.0 / 100.0,   23.0 / 900.0,   -1.0 / 450.0, -1.0 / 100.0},
      { 4.0 / 225.0,  -13.0 / 225.0,  -13.0 / 225.0,   -1.0 / 450.0,    4.0 / 25.0,  -1.0 / 150.0,  -1.0 / 150.0,  1.0 / 72.0,  1.0 / 24.0, 23.0 / 900.0, -29.0 / 1800.0, -29.0 / 1800.0,   -1.0 / 450.0, -1.0 / 8.0,  1.0 / 8.0,        0.0,   -1.0 / 50.0,  -1.0 / 450.0,  1.0 / 72.0,  1.0 / 24.0,  -9.0 / 100.0,  -1.0 / 150.0,  -1.0 / 150.0,   23.0 / 900.0,   23.0 / 900.0,   -1.0 / 450.0, -1.0 / 100.0},
      { 4.0 / 225.0,     4.0 / 75.0,   -1.0 / 450.0,     4.0 / 75.0,  -1.0 / 150.0,  -1.0 / 150.0,    4.0 / 25.0,  1.0 / 72.0, -1.0 / 24.0, 23.0 / 900.0,    7.0 / 600.0,   -1.0 / 450.0,    7.0 / 600.0, -1.0 / 8.0,        0.0,  1.0 / 8.0,   -1.0 / 50.0,  -1.0 / 450.0,  1.0 / 72.0, -1.0 / 24.0,  -1.0 / 150.0,  -1.0 / 150.0,  -9.0 / 100.0,   -3.0 / 100.0,   -1.0 / 450.0,   -3.0 / 100.0, -1.0 / 100.0},
      { 4.0 / 225.0,  -13.0 / 225.0,   -1.0 / 450.0,     4.0 / 75.0,  -1.0 / 150.0,  -1.0 / 150.0,  -13.0 / 75.0,  1.0 / 72.0, -1.0 / 24.0, 23.0 / 900.0, -29.0 / 1800.0,   -1.0 / 450.0,    7.0 / 600.0,  1.0 / 8.0,        0.0,  1.0 / 8.0,   -1.0 / 50.0,  -1.0 / 450.0,  1.0 / 72.0, -1.0 / 24.0,  -1.0 / 150.0,  -1.0 / 150.0,  23.0 / 300.0,   23.0 / 900.0,   -1.0 / 450.0,   -3.0 / 100.0, -1.0 / 100.0},
      { 4.0 / 225.0,     4.0 / 75.0,   -1.0 / 450.0,  -13.0 / 225.0,  -1.0 / 150.0,  -1.0 / 150.0,  -13.0 / 75.0,  1.0 / 72.0, -1.0 / 24.0, 23.0 / 900.0,    7.0 / 600.0,   -1.0 / 450.0, -29.0 / 1800.0, -1.0 / 8.0,        0.0, -1.0 / 8.0,   -1.0 / 50.0,  -1.0 / 450.0,  1.0 / 72.0, -1.0 / 24.0,  -1.0 / 150.0,  -1.0 / 150.0,  23.0 / 300.0,   -3.0 / 100.0,   -1.0 / 450.0,   23.0 / 900.0, -1.0 / 100.0},
      { 4.0 / 225.0,  -13.0 / 225.0,   -1.0 / 450.0,  -13.0 / 225.0,  -1.0 / 150.0,  -1.0 / 150.0,    4.0 / 25.0,  1.0 / 72.0, -1.0 / 24.0, 23.0 / 900.0, -29.0 / 1800.0,   -1.0 / 450.0, -29.0 / 1800.0,  1.0 / 8.0,        0.0, -1.0 / 8.0,   -1.0 / 50.0,  -1.0 / 450.0,  1.0 / 72.0, -1.0 / 24.0,  -1.0 / 150.0,  -1.0 / 150.0,  -9.0 / 100.0,   23.0 / 900.0,   -1.0 / 450.0,   23.0 / 900.0, -1.0 / 100.0},
      { 4.0 / 225.0,   -1.0 / 450.0,     4.0 / 75.0,     4.0 / 75.0,  -1.0 / 150.0,    4.0 / 25.0,  -1.0 / 150.0, -1.0 / 36.0,         0.0, 23.0 / 900.0,   -1.0 / 450.0,    7.0 / 600.0,    7.0 / 600.0,        0.0,  1.0 / 8.0, -1.0 / 8.0,   -1.0 / 50.0,  -1.0 / 450.0, -1.0 / 36.0,         0.0,  -1.0 / 150.0,  -9.0 / 100.0,  -1.0 / 150.0,   -1.0 / 450.0,   -3.0 / 100.0,   -3.0 / 100.0, -1.0 / 100.0},
      { 4.0 / 225.0,   -1.0 / 450.0,  -13.0 / 225.0,     4.0 / 75.0,  -1.0 / 150.0,  -13.0 / 75.0,  -1.0 / 150.0, -1.0 / 36.0,         0.0, 23.0 / 900.0,   -1.0 / 450.0, -29.0 / 1800.0,    7.0 / 600.0,        0.0, -1.0 / 8.0, -1.0 / 8.0,   -1.0 / 50.0,  -1.0 / 450.0, -1.0 / 36.0,         0.0,  -1.0 / 150.0,  23.0 / 300.0,  -1.0 / 150.0,   -1.0 / 450.0,   23.0 / 900.0,   -3.0 / 100.0, -1.0 / 100.0},
      { 4.0 / 225.0,   -1.0 / 450.0,     4.0 / 75.0,  -13.0 / 225.0,  -1.0 / 150.0,  -13.0 / 75.0,  -1.0 / 150.0, -1.0 / 36.0,         0.0, 23.0 / 900.0,   -1.0 / 450.0,    7.0 / 600.0, -29.0 / 1800.0,        0.0,  1.0 / 8.0,  1.0 / 8.0,   -1.0 / 50.0,  -1.0 / 450.0, -1.0 / 36.0,         0.0,  -1.0 / 150.0,  23.0 / 300.0,  -1.0 / 150.0,   -1.0 / 450.0,   -3.0 / 100.0,   23.0 / 900.0, -1.0 / 100.0},
      { 4.0 / 225.0,   -1.0 / 450.0,  -13.0 / 225.0,  -13.0 / 225.0,  -1.0 / 150.0,    4.0 / 25.0,  -1.0 / 150.0, -1.0 / 36.0,         0.0, 23.0 / 900.0,   -1.0 / 450.0, -29.0 / 1800.0, -29.0 / 1800.0,        0.0, -1.0 / 8.0,  1.0 / 8.0,   -1.0 / 50.0,  -1.0 / 450.0, -1.0 / 36.0,         0.0,  -1.0 / 150.0,  -9.0 / 100.0,  -1.0 / 150.0,   -1.0 / 450.0,   23.0 / 900.0,   23.0 / 900.0, -1.0 / 100.0},
    }
};
// clang-format on
